"use client";

import { useState } from "react";
import { motion } from "framer-motion";
import { Sparkles, Bot, Loader2 } from "lucide-react";

const prompts = [
  "Track my monthly expenses",
  "Set a budget for my food & transport",
  "How to save more with my income",
  "Smart ways to invest with little money",
  "Why is my savings goal not progressing?",
  "How much emergency fund do I need?"
];

export default function FinanceAssistant() {
  const [query, setQuery] = useState("");
  const [loading, setLoading] = useState(false);
  const [response, setResponse] = useState("");

  const askBot = async (question: string) => {
    setQuery(question);
    setLoading(true);
    setResponse("");

    try {
      // Replace this with your actual backend call
      const res = await fetch("/api/chatbot", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ question })
      });

      const data = await res.json();
      setResponse(data.answer || "Sorry, I couldn't find an answer.");
    } catch (error) {
      setResponse("Something went wrong. Please try again.");
    } finally {
      setLoading(false);
    }
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    askBot(query);
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 30 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6 }}
      className="min-h-screen bg-[#0F172A] text-white p-6 max-w-4xl mx-auto"
    >
      <div className="text-center mb-6">
        <h1 className="text-3xl font-bold text-purple-400 flex justify-center items-center gap-2">
          <Bot size={28} className="text-purple-400" />
          Pennywise AI Assistant
        </h1>
        <p className="text-sm text-gray-400 mt-2">Ask anything about your finances</p>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6">
        {prompts.map((item, i) => (
          <motion.button
            whileTap={{ scale: 0.95 }}
            whileHover={{ scale: 1.03 }}
            transition={{ type: "spring", stiffness: 300 }}
            key={i}
            className="bg-[#1E293B] hover:bg-purple-600 text-white p-4 rounded-md border border-slate-700 flex items-start gap-2"
            onClick={() => askBot(item)}
          >
            <Sparkles className="text-purple-300 mt-1" size={20} />
            {item}
          </motion.button>
        ))}
      </div>

      <form onSubmit={handleSubmit} className="flex items-center gap-3 mb-4">
        <input
          className="flex-1 p-3 rounded-md text-black outline-none"
          placeholder="Enter your financial question..."
          value={query}
          onChange={(e) => setQuery(e.target.value)}
        />
        <button
          type="submit"
          className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded"
        >
          Ask
        </button>
      </form>

      {loading && (
        <div className="flex items-center gap-2 text-purple-300 mt-6 animate-pulse">
          <Loader2 className="animate-spin" size={20} />
          Thinking...
        </div>
      )}

      {!loading && response && (
        <motion.div
          initial={{ opacity: 0, y: 10 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          className="mt-6 p-4 bg-[#1E293B] rounded border border-purple-500"
        >
          <h2 className="text-lg font-semibold text-purple-400 mb-2">
            ðŸ“Œ Answer:
          </h2>
          <p className="text-white whitespace-pre-line">{response}</p>
        </motion.div>
      )}

      <p className="text-xs text-center mt-10 text-gray-400">
        Content is generated by AI and is for reference only.
      </p>
    </motion.div>
  );
}
